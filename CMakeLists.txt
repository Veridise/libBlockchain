cmake_minimum_required(VERSION 3.14)
project(libBlockchain)

include (GNUInstallDirs)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

set(LIBBLOCKCHAIN_MAJOR_VERSION 0)
set(LIBBLOCKCHAIN_MINOR_VERSION 1)
set(LIBBLOCKCHAIN_PATCH_VERSION 0)
set(LIBBLOCKCHAIN_VERSION
        ${LIBBLOCKCHAIN_MAJOR_VERSION}.${LIBBLOCKCHAIN_MINOR_VERSION}.${LIBBLOCKCHAIN_PATCH_VERSION})


if(NOT DEFINED ENV{LLVM_DIR})
    message(FATAL_ERROR "$LLVM_HOME is not defined")
else ()
    set(ENV{LLVM_DIR} $ENV{LLVM_DIR}/lib/cmake/llvm)
endif()

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
find_package(RapidJSON REQUIRED MODULE)

find_package(LLVM REQUIRED CONFIG)
if (${LLVM_VERSION_MAJOR} VERSION_GREATER_EQUAL 10) 
    set(CMAKE_CXX_STANDARD 14)
endif ()

list(APPEND CMAKE_MODULE_PATH ${LLVM_CMAKE_DIR})
include(AddLLVM)

set(LIBBLOCKCHAIN_TARGET_EXPORT "${PROJECT_NAME}Targets")

add_subdirectory(lib)


## Export configuration

install(EXPORT ${LIBBLOCKCHAIN_TARGET_EXPORT}
  FILE "${LIBBLOCKCHAIN_TARGET_EXPORT}.cmake"
  DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")

include(CMakePackageConfigHelpers)
configure_package_config_file(
  "${CMAKE_CURRENT_SOURCE_DIR}/libBlockchainConfig.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/libBlockchainConfig.cmake"
  INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/libBlockchain"
  NO_SET_AND_CHECK_MACRO
  NO_CHECK_REQUIRED_COMPONENTS_MACRO
)
write_basic_package_version_file(
  "${CMAKE_CURRENT_BINARY_DIR}/libBlockchainConfigVersion.cmake"
  VERSION "${LIBBLOCKCHAIN_VERSION}"
  COMPATIBILITY AnyNewerVersion
)

install(FILES
  "${CMAKE_CURRENT_BINARY_DIR}/libBlockchainConfig.cmake"
  "${CMAKE_CURRENT_BINARY_DIR}/libBlockchainConfigVersion.cmake"
  DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")

# Export for use in build tree
export(EXPORT ${LIBBLOCKCHAIN_TARGET_EXPORT}
  FILE "${CMAKE_CURRENT_BINARY_DIR}/${LIBBLOCKCHAIN_TARGET_EXPORT}.cmake")
